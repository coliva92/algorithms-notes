#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{indentfirst}

\usepackage{titlesec}
\titleformat{\chapter}[display]{\bfseries\centering\larger}{\normalsize{\chaptertitlename\ \thechapter}}{0.5ex}{}[]
\titlespacing*{\chapter}{0pt}{-50pt}{20pt}
\titleformat{\section}[hang]{\bfseries\normalsize}{\thesection\ }{0pt}{}[]
\titleformat{\subsection}[runin]{\bfseries\normalsize}{\thesubsection\ }{0pt}{}[]
\titleformat{\paragraph}[runin]{\itshape\normalsize}{\theparagraph\ }{0pt}{}[]

\newtheoremstyle{myplain}{\topsep}{\topsep}{\itshape}{}{\scshape}{.}{.5em}{}
\newtheoremstyle{mydef}{\topsep}{\topsep}{\normalfont}{}{\scshape}{.}{.5em}{}
\theoremstyle{myplain}
\newtheorem{mythm}{Teorema}[]
\newtheorem{mylem}{Lema}[]
\newtheorem{myprop}{Proposición}[]
\theoremstyle{mydef}
\newtheorem{mydef}{Definición}[]
\newtheorem{myrmk}{Observación}[]
\newtheorem{myex}{Ejemplo}[]

\let\thm\mythm
\let\endthm\endmythm
\let\lem\mylem
\let\endlem\endmylem
\let\prop\myprop
\let\endprop\endmyprop
\let\defn\mydef
\let\enddefn\endmydef
\let\example\myex
\let\endexample\endmyex
\let\rem\myrmk
\let\endrem\endmyrmk

\usepackage{xpatch}
\newcommand{\proofnamefont}{\scshape}
\xpatchcmd{\proof}{\itshape}{\normalfont\proofnamefont}{}{}
\end_preamble
\use_default_options true
\begin_modules
algorithm2e
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 66
PackageOptions algorithm2e "vlined,linesnumbered,ruled"
\end_local_layout
\language spanish-mexico
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tb
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.57in
\topmargin 1.2in
\rightmargin 1.2in
\bottommargin 1.2in
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 2 5 -1
\bullet 1 5 35 -1
\bullet 2 2 11 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Conceptos Fundamentales
\end_layout

\begin_layout Section
Problema computacional
\end_layout

\begin_layout Standard
Un problema computacional (o, simplemente, 
\emph on
problema
\emph default
) es una relación explícita entre dos conjuntos de entidades, uno de 
\emph on
entrada
\emph default
 y otro de 
\emph on
salida
\emph default
.
 Por ejemplo, el problema de 
\shape smallcaps
Ordenamiento
\shape default
 se define de la sig.
 manera:
\end_layout

\begin_layout Itemize

\emph on
Entrada
\emph default
: una secuencia de 
\begin_inset Formula $n$
\end_inset

 elementos comparables, 
\begin_inset Formula $A=\langle a_{1},a_{2},\dots,a_{n}\rangle$
\end_inset

.
\end_layout

\begin_layout Itemize

\emph on
Salida
\emph default
: una permutación de la secuencia de entrada, 
\begin_inset Formula $A\text{´}=\langle a\text{´}_{1},a\text{´}_{2},\dots,a\text{´}_{n}\rangle$
\end_inset

, tal que 
\begin_inset Formula $a\text{´}_{1}\leq a\text{´}_{2}\le\dots\le a\text{´}_{n}$
\end_inset

.
\end_layout

\begin_layout Section
Algoritmo
\end_layout

\begin_layout Standard
Un algoritmo es una secuencia finita y ordenada de instrucciones bien definidas
 que describen el procedimiento a seguir para transformar la entrada de
 un problema determinado a la salida correspondiente.
 Se dice que un algoritmo es
\end_layout

\begin_layout Itemize
finito porque tiene una cantidad determinada de instrucciones y su ejecución
 termina en una cantidad determinada de tiempo,
\end_layout

\begin_layout Itemize
ordenado porque, dadas dos instrucciones cualesquiera, no hay ambigüedad
 sobre cuál debe ejecutarse primero,
\end_layout

\begin_layout Itemize
bien definido porque no hay ambigüedad sobre la interpretación de las instruccio
nes.
\end_layout

\begin_layout Standard
Un 
\emph on
caso específico
\emph default
 (instance) para algún problema particular es cualquier conjunto de valores
 específicos que satisfagan los requerimientos de entrada impuestos por
 dicho problema.
 Por ejemplo, dos casos específicos para el problema de ordenamiento son:
 
\begin_inset Formula $\langle31,41,59,26,41,58\rangle$
\end_inset

 y 
\begin_inset Formula $\langle f,x,a,b,w,j\rangle$
\end_inset

.
 Un algoritmo es 
\emph on
correcto
\emph default
 cuando, para cualquier caso específico, el algoritmo termina su ejecución
 y produce un resultado que cumple los requerimientos de salida impuestos
 por el problema.
 Se dice que un algoritmo correcto 
\emph on
resuelve
\emph default
 el problema en cuestión.
 Un algoritmo es 
\emph on
incorrecto
\emph default
 cuando existe al menos un caso específico para el cual el algoritmo no
 termina su ejecución o termina con un resultado que no cumple con los requerimi
entos de salida.
 
\end_layout

\begin_layout Section
Estructura de datos
\end_layout

\begin_layout Standard
Una estructura de datos es una colección de datos y de sus reglas de organizació
n, acceso y operación.
\end_layout

\begin_layout Section
Pseudocódigo
\end_layout

\begin_layout Standard
El pseudocódigo es una descripción compacta, informal y de alto nivel que
 utiliza estructuras de control de flujo combinadas con prosa en lenguaje
 natural y/o notación matemática para describir un algoritmo.
 Se dice que el pseudocódigo es de alto nivel porque se omiten muchos detalles
 sobre la implementación del algoritmo que describe.
 A diferencia de un lenguaje de programación, el pseudocódigo se escribe
 con el propósito de que sea leído y comprendido por seres humanos, no por
 computadoras.
 
\end_layout

\begin_layout Section
Análisis de algoritmos
\end_layout

\begin_layout Standard
El análisis de algoritmos es el conjunto de técnicas matemáticas por medio
 de las cuáles se pueden caracterizar las propiedades particulares de un
 algoritmo de forma independiente a su implementación específica en hardware
 y/o software.
 En estos apuntes, el análisis consistirá en describir únicamente dos caracterís
ticas:
\end_layout

\begin_layout Itemize
La
\emph on
 exactitud
\emph default
 (correctness): ¿el algoritmo es correcto?
\end_layout

\begin_layout Itemize
La
\emph on
 eficiencia
\emph default
: ¿qué tanto crece el tiempo de ejecución requerido por el algoritmo con
 respecto al tamaño de la entrada? ¿dicha razón de crecimiento es polinomial?
\end_layout

\begin_layout Section*
Notas bibliográficas
\end_layout

\begin_layout Standard
Realmente no existe una definición formal de lo que es un algoritmo; la
 
\begin_inset Quotes fls
\end_inset

definición
\begin_inset Quotes frs
\end_inset

 que se presenta aquí es una lista de las características que posee un algoritmo
, más que una definición propia.
\end_layout

\begin_layout Itemize
Cormen T.H., Leiserson C.E., Rivest R.L.
 & Stein C., 
\begin_inset Quotes fls
\end_inset

Introduction to Algorithms
\begin_inset Quotes frs
\end_inset

, 3ra ed.
 (2009), MIT Press.
 Págs.
 5-14 y 20-22.
\end_layout

\begin_layout Itemize
Skiena S.S., 
\begin_inset Quotes fls
\end_inset

The Algorithm Design Manual
\begin_inset Quotes frs
\end_inset

, 2da ed.
 (2012), Springer.
 Págs.
 3-13.
\end_layout

\end_body
\end_document
